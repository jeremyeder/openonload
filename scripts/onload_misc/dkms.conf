PACKAGE_NAME=openonload
PACKAGE_VERSION=

# Items below here should not have to change with each driver version.
# We quote make to avoid a misfeature of DKMS which adds a definition
# of KERNELRELEASE, which should only be defined by kbuild.
if which onload_uninstall >/dev/null 2>&1; then
  MAKE[0]="${dkms_tree}/${PACKAGE_NAME}/${PACKAGE_VERSION}/build/scripts/onload_install --newkernel $(uname -r)"
else
  MAKE[0]="${dkms_tree}/${PACKAGE_NAME}/${PACKAGE_VERSION}/build/scripts/onload_install" 
fi

#CLEAN="${dkms_tree}/${PACKAGE_NAME}/${PACKAGE_VERSION}/source/scripts/onload_misc/onload_uninstall"

# DKMS does not rely on overriding in-tree modules by installing new
# modules in a specific directory; instead it moves the in-tree module
# out of the way.

# DEST_MODULE_LOCATION is usually overridden on installation according
# to distribution conventions.  However, it is used on uninstallation
# to move the in-tree module back into the right place.  So if there
# is an in-tree module make sure it's set appropriately.

BUILT_MODULE_NAME[0]="sfc"

BUILT_MODULE_LOCATION[0]="../build/build/$(uname -m)_linux-$(uname -r)/driver/linux"
if grep -q "^CONFIG_SFC=m" "${kernel_source_dir}/.config" 2>/dev/null; then
    DEST_MODULE_LOCATION[0]="/kernel/drivers/net/"
else
    DEST_MODULE_LOCATION[0]="/extra"
fi

BUILT_MODULE_NAME[1]="sfc_affinity"
BUILT_MODULE_LOCATION[1]="../build/build/$(uname -m)_linux-$(uname -r)/driver/linux_affinity"
DEST_MODULE_LOCATION[1]="/extra"

BUILT_MODULE_NAME[2]="sfc_char"
BUILT_MODULE_LOCATION[2]="../build/build/$(uname -m)_linux-$(uname -r)/driver/linux_char"
DEST_MODULE_LOCATION[2]="/extra"

BUILT_MODULE_NAME[3]="sfc_resource"
BUILT_MODULE_LOCATION[3]="../build/build/$(uname -m)_linux-$(uname -r)/driver/linux_resource"
DEST_MODULE_LOCATION[3]="/extra"

BUILT_MODULE_NAME[4]="onload"
BUILT_MODULE_LOCATION[4]="../build/build/$(uname -m)_linux-$(uname -r)/driver/linux_onload"
DEST_MODULE_LOCATION[4]="/extra"


REMAKE_INITRD="yes"
AUTOINSTALL="yes"
