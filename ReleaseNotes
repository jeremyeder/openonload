
OpenOnload 201210-u3 Release Notes
==================================

 This is an update release that fixes bugs in openonload-201210-u2.

 Please see the ChangeLog file for details of the changes in this release.
 See ReleaseNotes-sfc for details of changes to the sfc net driver.

 The release notes for the openonload-201210-u1 release are included below.


----------------------------------------
Linux 3.10 support
------------------

 This release is known not to compile cleanly with Linux 3.10 series
 kernels.  A patch to add support for 3.10 has been prepared but this
 was not available in time to be tested as part of this release.
 Please contact support@solarflare.com if you need access to this.

----------------------------------------
MRG2u3 support
---------------

 Although this release includes support for the RedHat MRG 2 update 3
 distribution and kernel (3.6.11-rt) we do not recommend using SR-IOV
 or IOMMU with Onload on these systems due to a number of problems
 found in the kernel support for these features during testing.  This
 means the following should not be used on MRG2u3:

 - Scalable packet buffer mode (EF_PACKET_BUFFER_MODE=1)
 - ef_vi with VFs

----------------------------------------
Known bugs
----------

 Bug37923: The "onload_stackdump affinities" command may seg fault

Kieran Mansley
2013/07/19



OpenOnload 201210-u1 Release Notes
==================================

 This is an update release that fixes bugs in openonload-201210 and adds a
 few enhancements.

 Please see the ChangeLog file for details of the changes in this release.
 See ReleaseNotes-sfc for details of changes to the sfc net driver.


----------------------------------------
Configuration options
---------------------

 The following new configuration options have been added:

 EF_SIGNALS_NOPOSTPONE
 - Onload intercepts signals in order to prevent deadlocks due to signal
   handlers reentering the Onload stack.  This option provides a way to
   stop Onload from intercepting certain signals.  By default SIGBUS,
   SIGSEGV and SIGPROF are not intercepted.

   For more information on the circumstances under which this option is
   useful, please see the Onload User Guide.


----------------------------------------
IP_ADD_SOURCE_MEMBERSHIP etc.
-----------------------------

 This release adds support for the following socket options (when Onload is
 built on distributions that support them):

   IP_ADD_SOURCE_MEMBERSHIP
   IP_DROP_SOURCE_MEMBERSHIP
   MCAST_JOIN_SOURCE_GROUP
   MCAST_LEAVE_SOURCE_GROUP

 Note that the behaviour of these options differs from that of the Linux
 kernel stack in that Onload does not prevent datagrams with different
 source addresses from being delivered to the socket if they arrive at the
 network interface.  However, these options are still useful with Onload
 because they can take advantage of source-specific IGMPv3.

 We will address this limitation in a future release of Onload.


----------------------------------------
Red Hat Enterprise 6.4
----------------------

 This release has been tested on the beta of RHEL6.4.  We will test
 RHEL6.4-final when it is released.


David Riddoch
2013/01/31



Below are the release notes from the openonload-201210 release:


OpenOnload 201210 Release Notes
===============================

 This is a major release that adds new features to OpenOnload.

 Below is a brief summary of the major new features and limitations that we
 are aware of.  See the ChangeLog for further details and bugs fixed.


----------------------------------------
New features
------------

- Use huge pages for Onload packet buffers (EF_USE_HUGE_PAGES).

- Improvements to onload_stackdump default output and new commands.

- Performance improvements in epoll_wait() and poll().

- Physical addressing mode (EF_PACKET_BUFFER_MODE=2 or 3).

- Option to put TCP loopback connections in a separate stack.

- sendmmsg() support for accelerated UDP sockets, whether or not GLIBC
  and/or the kernel support this call.

- Net driver: VLAN insertion and stripping support.

- Firewalling including Iptables integration (BETA).


----------------------------------------
Configuration options
---------------------

 The following new configuration options have been added:

 EF_PACKET_BUFFER_MODE
 - New options 2 and 3 enable physical addressing mode.  Physical
   addressing mode is insecure in that the user-level application can
   provoke the network adapter to read and write arbitrary addresses in
   memory.  See also phys_mode_gid below.

  EF_TCP_CLIENT_LOOPBACK=4
  - New option 4 causes TCP loopback connections to be placed in a separate
    Onload stack.  This can improve performance by reducing contention
    between resources.

  EF_USE_HUGE_PAGES
  - Enable use of huge pages for packet buffers.

  EF_VALIDATE_ENV
  - Warn about any obsolete or misspelled options in the environment.


----------------------------------------
Module options
--------------

 The following module options have been added:

 epoll2_max_stacks (onload module)
 - Controls the maximum number of stacks that an epoll fd can handle when
   EF_UL_EPOLL=2.

 phys_mode_gid (onload module)
 - Set this option to enable physical addressing mode and restrict which
   users can use it.

 shared_buffer_table (sfc_resource module)
 - This module option needs to be set to enable legacy ef_vi applications
   that use the ef_iobufset API.  For example, setting
   shared_buffer_table=10000 makes 10000 buffer table entries available for
   use with ef_iobufset.


 The following module options have been removed:

 unsafe_sriov_without_iommu (sfc_resource module)
 - Obsoleted by the new physical addressing modes and phys_mode_gid.

 buffer_table_min (sfc_resource module)
 buffer_table_max
 - These options existed because previous versions of the sfc_resource
   driver required uniform resources across all network adapters.  That
   caused problems when different types of adapter were placed together in
   one host.  That limitation is no longer present, so these module options
   are not needed.


----------------------------------------
Iptables and firewalling
------------------------

 This release adds a BETA of support for iptables integration.  This
 feature allows the administrator to place limits on which flows are
 permitted to bypass the kernel stack.  Flows that are not permitted to
 bypass the kernel stack are therefore subject to iptables rules (if
 enabled) in the normal way.

 This feature does not perform iptables rules checking on the adapter
 itself.

 The onload_iptables script provides a way to configure the Onload firewall
 automatically so that a subset of iptables rules will be respected when
 using Onload.  The script should tell you about any iptables rules that
 are incompatible with Onload acceleration.


----------------------------------------
ef_iobufset is deprecated
-------------------------

 The ef_iobufset interface in ef_vi is deprecated and will be removed in a
 future release.  We recommend you migrate ef_vi applications to the
 ef_memreg interface instead.


----------------------------------------
Known bugs
----------

 - bug31498: sendmmsg() returns error code incorrectly.

 - bug31280: Build failure with gcc 4.7.1 due to string concatenation.


David Riddoch
2012/10/09
